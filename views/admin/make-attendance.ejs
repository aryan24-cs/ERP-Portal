<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ERP Portal - Make Attendance</title>
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css"
    />
    <style>
      :root {
        --primary-blue: #3b82f6;
        --primary-purple: #8b5cf6;
        --primary-teal: #06b6d4;
        --primary-pink: #ec4899;
        --primary-indigo: #6366f1;
        --accent-orange: #f97316;
      }

      body {
        font-family: "Poppins", sans-serif;
        background: linear-gradient(135deg, #164172 0%, #3d5f75 100%);
        min-height: 100vh;
        overflow-x: hidden;
      }

      .sidebar {
        position: fixed;
        top: 0;
        left: 0;
        width: 250px;
        height: 100%;
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-right: 1px solid rgba(255, 255, 255, 0.2);
        padding: 2rem 1rem;
        z-index: 1000;
        transition: transform 0.3s ease;
      }

      .sidebar.hidden {
        transform: translateX(-100%);
      }

      .sidebar-toggle {
        position: fixed;
        top: 1rem;
        left: 1rem;
        z-index: 1001;
        background: var(--primary-blue);
        color: white;
        padding: 0.5rem;
        border-radius: 50%;
        cursor: pointer;
        display: none;
      }

      @media (max-width: 768px) {
        .sidebar {
          transform: translateX(-100%);
        }
        .sidebar.active {
          transform: translateX(0);
        }
        .sidebar-toggle {
          display: block;
        }
      }

      .sidebar-nav a {
        display: flex;
        align-items: center;
        padding: 0.75rem 1rem;
        color: white;
        text-decoration: none;
        border-radius: 10px;
        margin-bottom: 0.5rem;
        transition: all 0.3s ease;
      }

      .sidebar-nav a:hover,
      .sidebar-nav a.active {
        background: rgba(255, 255, 255, 0.2);
        transform: translateX(5px);
      }

      .sidebar-nav a i {
        margin-right: 0.75rem;
      }

      .morphing-container {
        margin-left: 250px;
        padding: 2rem;
        position: relative;
        z-index: 10;
      }

      @media (max-width: 768px) {
        .morphing-container {
          margin-left: 0;
        }
      }

      .blob-card {
        background: rgba(22, 21, 21, 0.15);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.1);
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        position: relative;
        overflow: hidden;
      }

      .blob-card:hover {
        transform: translateY(-15px) scale(1.02);
        box-shadow: 0 35px 70px rgba(0, 0, 0, 0.15);
      }

      .attendance-blob {
        border-radius: 60px 25px 60px 25px;
        transform: rotate(-2deg);
        margin: 2rem 1rem;
      }

      .text-flow {
        color: white;
        text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
      }

      .icon-bubble {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background: linear-gradient(
          135deg,
          var(--primary-blue),
          var(--primary-purple)
        );
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.5rem;
        box-shadow: 0 10px 30px rgba(59, 130, 246, 0.3);
      }

      .fade-in-flow {
        animation: fadeInFlow 1s ease-out forwards;
        opacity: 0;
      }

      .slide-in-left {
        animation: slideInLeft 0.8s ease-out forwards;
        opacity: 0;
        transform: translateX(-50px);
      }

      @keyframes fadeInFlow {
        to {
          opacity: 1;
        }
      }

      @keyframes slideInLeft {
        to {
          opacity: 1;
          transform: translateX(0);
        }
      }

      .input-flow {
        background: rgba(0, 0, 0, 0.788);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 10px;
        padding: 0.75rem;
        color: white;
        width: 100%;
        transition: all 0.3s ease;
      }

      .input-flow:focus {
        outline: none;
        border-color: var(--primary-blue);
        box-shadow: 0 0 10px rgba(59, 130, 246, 0.5);
      }

      .flowing-button {
        background: linear-gradient(
          135deg,
          var(--primary-blue),
          var(--primary-purple),
          var(--primary-teal)
        );
        background-size: 200% 200%;
        border: none;
        border-radius: 50px;
        padding: 0.75rem 1.5rem;
        color: white;
        font-weight: 600;
        font-size: 1rem;
        cursor: pointer;
        transition: all 0.4s ease;
        animation: gradientFlow 3s ease infinite;
      }

      @keyframes gradientFlow {
        0% {
          background-position: 0% 50%;
        }
        50% {
          background-position: 100% 50%;
        }
        100% {
          background-position: 0% 50%;
        }
      }

      .flowing-button:hover {
        transform: translateY(-3px) scale(1.05);
        box-shadow: 0 15px 40px rgba(59, 130, 246, 0.4);
      }

      .error-flow {
        background: linear-gradient(135deg, #ef4444, #dc2626);
        color: white;
        padding: 1rem 2rem;
        border-radius: 30px;
        margin-bottom: 2rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
        box-shadow: 0 10px 30px rgba(239, 68, 68, 0.3);
      }

      .success-flow {
        background: linear-gradient(135deg, #10b981, #059669);
        color: white;
        padding: 1rem 2rem;
        border-radius: 30px;
        margin-bottom: 2rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
        box-shadow: 0 10px 30px rgba(16, 185, 129, 0.3);
      }

      .calendar-container {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 10px;
        padding: 1rem;
      }

      .recent-attendance-table {
        width: 100%;
        border-collapse: collapse;
      }

      .recent-attendance-table th,
      .recent-attendance-table td {
        padding: 0.75rem;
        text-align: left;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      }

      .recent-attendance-table th {
        font-weight: 600;
        background: rgba(255, 255, 255, 0.05);
      }
    </style>
  </head>
  <body>
    <button class="sidebar-toggle" aria-label="Toggle Sidebar">
      <i class="fas fa-bars"></i>
    </button>
    <%- include('../partials/admin-sidebar', { token, currentPage:
    'make-attendance' }) %>

    <div class="morphing-container">
      <header class="organic-header fade-in-flow">
        <div class="px-8 py-6">
          <div class="flex items-center">
            <div class="icon-bubble mr-6">
              <i class="fas fa-calendar-check"></i>
            </div>
            <div>
              <h1 class="text-3xl font-bold text-flow">Make Attendance</h1>
              <p class="text-flow opacity-90 text-lg">
                Mark student attendance
              </p>
            </div>
          </div>
        </div>
      </header>

      <main class="flowing-grid">
        <% if (typeof success !== 'undefined' && success) { %>
        <div class="success-flow fade-in-flow" id="success-message">
          <div class="flex items-center">
            <i class="fas fa-check-circle text-2xl mr-4"></i>
            <span class="font-semibold text-lg"><%= success %></span>
          </div>
          <button
            class="text-white hover:text-gray-200"
            onclick="dismissMessage('success-message')"
            aria-label="Close success message"
          >
            <i class="fas fa-times"></i>
          </button>
        </div>
        <% } %> <% if (typeof error !== 'undefined' && error) { %>
        <div class="error-flow fade-in-flow" id="error-message">
          <div class="flex items-center">
            <i class="fas fa-exclamation-circle text-2xl mr-4"></i>
            <span class="font-semibold text-lg"><%= error %></span>
          </div>
          <button
            class="text-white hover:text-gray-200"
            onclick="dismissMessage('error-message')"
            aria-label="Close error message"
          >
            <i class="fas fa-times"></i>
          </button>
        </div>
        <% } %>
        <section class="attendance-section">
          <div class="blob-card attendance-blob slide-in-left">
            <div class="p-8">
              <h3 class="text-2xl font-bold text-flow mb-6">Attendance Form</h3>
              <form
                id="attendance-form"
                action="/admin/mark-attendance?token=<%= token %>"
                method="POST"
              >
                <div class="grid grid-cols-1 md:grid-cols-5 gap-4 mb-4">
                  <div>
                    <label for="date" class="block text-flow font-semibold mb-1"
                      >Date</label
                    >
                    <input
                      type="text"
                      id="date"
                      name="date"
                      class="input-flow flatpickr"
                      required
                    />
                  </div>
                  <div>
                    <label
                      for="course"
                      class="block text-flow font-semibold mb-1"
                      >Course</label
                    >
                    <select
                      id="course"
                      name="course"
                      class="input-flow"
                      required
                    >
                      <option value="">Select Course</option>
                      <option value="B.Tech">B.Tech</option>
                      <option value="BCA">BCA</option>
                      <option value="BBA">BBA</option>
                      <option value="MBA">MBA</option>
                    </select>
                  </div>
                  <div>
                    <label
                      for="branch"
                      class="block text-flow font-semibold mb-1"
                      >Branch</label
                    >
                    <select
                      id="branch"
                      name="branch"
                      class="input-flow"
                      required
                    >
                      <option value="">Select Branch</option>
                    </select>
                  </div>
                  <div>
                    <label
                      for="semester"
                      class="block text-flow font-semibold mb-1"
                      >Semester</label
                    >
                    <select
                      id="semester"
                      name="semester"
                      class="input-flow"
                      required
                    >
                      <option value="">Select Semester</option>
                      <% for (let i = 1; i <= 8; i++) { %>
                      <option value="<%= i %>"><%= i %></option>
                      <% } %>
                    </select>
                  </div>
                  <div>
                    <label
                      for="student"
                      class="block text-flow font-semibold mb-1"
                      >Student</label
                    >
                    <select
                      id="student"
                      name="studentId"
                      class="input-flow"
                      required
                    >
                      <option value="">Select Student</option>
                    </select>
                  </div>
                </div>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                  <div>
                    <label
                      for="subject"
                      class="block text-flow font-semibold mb-1"
                      >Subject</label
                    >
                    <select
                      id="subject"
                      name="subject"
                      class="input-flow"
                      required
                    >
                      <option value="">Select Subject</option>
                    </select>
                  </div>
                  <div>
                    <label class="block text-flow font-semibold mb-1"
                      >Status</label
                    >
                    <div class="flex space-x-4">
                      <label class="text-flow"
                        ><input
                          type="radio"
                          name="status"
                          value="Present"
                          required
                        />
                        Present</label
                      >
                      <label class="text-flow"
                        ><input
                          type="radio"
                          name="status"
                          value="Absent"
                          required
                        />
                        Absent</label
                      >
                    </div>
                  </div>
                </div>
                <input type="hidden" name="token" value="<%= token %>" />
                <button type="submit" class="flowing-button">
                  <i class="fas fa-save mr-2"></i> Mark Attendance
                </button>
              </form>

              <div class="calendar-container mt-8">
                <h3 class="text-2xl font-bold text-flow mb-4">
                  Attendance Calendar
                </h3>
                <div id="attendance-calendar"></div>
              </div>
            </div>
          </div>
        </section>

        <section class="recent-attendance-section mt-8">
          <div class="blob-card attendance-blob slide-in-left">
            <div class="p-8">
              <h3 class="text-2xl font-bold text-flow mb-6">
                Recently Marked Attendance
              </h3>
              <% if (recentAttendance && recentAttendance.length > 0) { %>
              <table class="recent-attendance-table text-flow">
                <thead>
                  <tr>
                    <th>Student ID</th>
                    <th>Student Name</th>
                    <th>Subject</th>
                    <th>Date</th>
                    <th>Status</th>
                  </tr>
                </thead>
                <tbody>
                  <% recentAttendance.forEach(record => { %>
                  <tr>
                    <td><%= record.studentId %></td>
                    <td><%= record.studentName %></td>
                    <td><%= record.subject %></td>
                    <td><%= new Date(record.date).toLocaleDateString() %></td>
                    <td><%= record.status %></td>
                  </tr>
                  <% }) %>
                </tbody>
              </table>
              <% } else { %>
              <p class="text-flow">No recent attendance records.</p>
              <% } %>
            </div>
          </div>
        </section>
      </main>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>
      const sidebar = document.querySelector(".sidebar");
      const toggle = document.querySelector(".sidebar-toggle");
      toggle.addEventListener("click", () => {
        sidebar.classList.toggle("active");
      });

      flatpickr(".flatpickr", {
        dateFormat: "Y-m-d",
        maxDate: new Date(),
      });

      const courseData = {
        "B.Tech": ["CSE", "ECE", "CE", "ME", "Chemical"],
        BCA: ["General", "Data Science"],
        BBA: ["General", "Marketing"],
        MBA: ["Finance", "HR"],
      };

      const courseSelect = document.getElementById("course");
      const branchSelect = document.getElementById("branch");
      const semesterSelect = document.getElementById("semester");
      const studentSelect = document.getElementById("student");
      const subjectSelect = document.getElementById("subject");

      courseSelect.addEventListener("change", () => {
        const branches = courseData[courseSelect.value] || [];
        branchSelect.innerHTML = '<option value="">Select Branch</option>';
        branches.forEach((branch) => {
          branchSelect.innerHTML += `<option value="${branch}">${branch}</option>`;
        });
        studentSelect.innerHTML = '<option value="">Select Student</option>';
        subjectSelect.innerHTML = '<option value="">Select Subject</option>';
      });

      semesterSelect.addEventListener("change", updateStudents);
      branchSelect.addEventListener("change", updateStudents);

      async function updateStudents() {
        if (courseSelect.value && branchSelect.value && semesterSelect.value) {
          try {
            const response = await fetch(
              `/api/students?course=${encodeURIComponent(
                courseSelect.value
              )}&branch=${encodeURIComponent(branchSelect.value)}&semester=${
                semesterSelect.value
              }&token=${encodeURIComponent("<%= token %>")}`
            );
            if (response.ok) {
              const students = await response.json();
              studentSelect.innerHTML =
                '<option value="">Select Student</option>';
              students.forEach((student) => {
                studentSelect.innerHTML += `<option value="${student._id}">${student.name} (${student.details.rollNo})</option>`;
              });
            } else {
              console.error("Failed to fetch students:", response.statusText);
              studentSelect.innerHTML =
                '<option value="">Error loading students</option>';
            }
          } catch (err) {
            console.error("Error fetching students:", err);
            studentSelect.innerHTML =
              '<option value="">Error loading students</option>';
          }
        } else {
          studentSelect.innerHTML = '<option value="">Select Student</option>';
          subjectSelect.innerHTML = '<option value="">Select Subject</option>';
        }
      }

      studentSelect.addEventListener("change", async () => {
        subjectSelect.innerHTML = '<option value="">Select Subject</option>';
        if (studentSelect.value) {
          try {
            const response = await fetch(
              `/api/students/${
                studentSelect.value
              }/subjects?token=${encodeURIComponent("<%= token %>")}`
            );
            if (response.ok) {
              const subjects = await response.json();
              subjects.forEach((subject) => {
                subjectSelect.innerHTML += `<option value="${subject}">${subject}</option>`;
              });
            } else {
              console.error("Failed to fetch subjects:", response.statusText);
              subjectSelect.innerHTML =
                '<option value="">Error loading subjects</option>';
            }

            const calendarResponse = await fetch(
              `/api/students/${
                studentSelect.value
              }/attendance?token=${encodeURIComponent("<%= token %>")}`
            );
            if (calendarResponse.ok) {
              const attendance = await calendarResponse.json();
              renderCalendar(attendance);
            } else {
              console.error(
                "Failed to fetch attendance:",
                calendarResponse.statusText
              );
            }
          } catch (err) {
            console.error("Error fetching subjects or attendance:", err);
            subjectSelect.innerHTML =
              '<option value="">Error loading subjects</option>';
          }
        }
      });

      function renderCalendar(attendance) {
        const calendarEl = document.getElementById("attendance-calendar");
        calendarEl.innerHTML = "";
        flatpickr(calendarEl, {
          inline: true,
          dateFormat: "Y-m-d",
          onDayCreate: (dObj, dStr, fp, dayElem) => {
            const date = dayElem.dateObj.toISOString().split("T")[0];
            const record = attendance.find(
              (a) => a.date.split("T")[0] === date
            );
            if (record) {
              dayElem.style.backgroundColor =
                record.status === "Present" ? "#10b981" : "#ef4444";
              dayElem.title = `${record.subject}: ${record.status}`;
            }
          },
        });
      }

      function dismissMessage(id) {
        const message = document.getElementById(id);
        if (message) {
          message.style.transition = "opacity 0.5s ease";
          message.style.opacity = "0";
          setTimeout(() => message.remove(), 500);
        }
      }
      if (document.getElementById("error-message")) {
        setTimeout(() => dismissMessage("error-message"), 5000);
      }
      if (document.getElementById("success-message")) {
        setTimeout(() => dismissMessage("success-message"), 5000);
      }
    </script>
  </body>
</html>
